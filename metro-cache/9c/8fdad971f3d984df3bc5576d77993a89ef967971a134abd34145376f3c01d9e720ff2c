{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"../core/AnimatedBlock","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"../val","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createAnimatedConcat = createAnimatedConcat;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"fbjs/lib/invariant\"));\n\n  var _AnimatedBlock = _$$_REQUIRE(_dependencyMap[7], \"../core/AnimatedBlock\");\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./AnimatedNode\"));\n\n  var _val = _$$_REQUIRE(_dependencyMap[9], \"../val\");\n\n  var AnimatedConcat = function (_AnimatedNode) {\n    (0, _inherits2.default)(AnimatedConcat, _AnimatedNode);\n\n    function AnimatedConcat(input) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedConcat);\n      (0, _invariant.default)(input.every(function (el) {\n        return el instanceof _AnimatedNode2.default || typeof el === 'number' || typeof el === 'string';\n      }), \"Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: \" + input);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedConcat).call(this, {\n        type: 'concat',\n        input: input.map(function (n) {\n          return n.__nodeID;\n        })\n      }, input));\n      _this._input = input;\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedConcat, [{\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        return this._input.reduce(function (prev, current) {\n          return prev + (0, _val.val)(current);\n        }, '');\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return \"AnimatedConcat, id: \" + this.__nodeID;\n      }\n    }]);\n    return AnimatedConcat;\n  }(_AnimatedNode2.default);\n\n  function createAnimatedConcat() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new AnimatedConcat(args.map(_AnimatedBlock.adapt));\n  }\n});","lineCount":70,"map":[[19,0,1,0],[21,0,2,0],[23,0,3,0],[25,0,4,0],[27,6,6,6,"AnimatedConcat"],[27,20],[30,0,7,2],[30,28,7,14,"input"],[30,33,7,2],[30,35,7,21],[31,0,7,21],[33,0,7,21],[34,0,8,4],[34,30,9,6,"input"],[34,35,9,11],[34,36,9,12,"every"],[34,41,9,6],[34,42,10,8],[34,52,10,8,"el"],[34,54,10,10],[35,0,10,10],[35,15,11,10,"el"],[35,17,11,12],[35,29,11,24,"AnimatedNode"],[35,51,11,10],[35,55,12,10],[35,62,12,17,"el"],[35,64,12,10],[35,69,12,24],[35,77,11,10],[35,81,13,10],[35,88,13,17,"el"],[35,90,13,10],[35,95,13,24],[35,103,10,10],[36,0,10,10],[36,7,9,6],[36,8,8,4],[36,158,15,152,"input"],[36,163,8,4],[37,0,17,4],[37,118,17,10],[38,0,17,12,"type"],[38,8,17,12,"type"],[38,12,17,16],[38,14,17,18],[38,22,17,10],[39,0,17,28,"input"],[39,8,17,28,"input"],[39,13,17,33],[39,15,17,35,"input"],[39,20,17,40],[39,21,17,41,"map"],[39,24,17,35],[39,25,17,45],[39,35,17,45,"n"],[39,36,17,46],[40,0,17,46],[40,17,17,50,"n"],[40,18,17,51],[40,19,17,52,"__nodeID"],[40,27,17,46],[41,0,17,46],[41,9,17,35],[42,0,17,10],[42,7,17,4],[42,9,17,65,"input"],[42,14,17,4],[43,0,18,4],[43,12,18,9,"_input"],[43,18,18,4],[43,21,18,18,"input"],[43,26,18,4],[44,0,7,21],[45,0,19,3],[49,37,21,17],[50,0,22,4],[50,15,22,11],[50,20,22,16,"_input"],[50,26,22,11],[50,27,22,23,"reduce"],[50,33,22,11],[50,34,22,30],[50,44,22,31,"prev"],[50,48,22,30],[50,50,22,37,"current"],[50,57,22,30],[51,0,22,30],[51,17,22,49,"prev"],[51,21,22,53],[51,24,22,56],[51,38,22,60,"current"],[51,45,22,56],[51,46,22,30],[52,0,22,30],[52,9,22,11],[52,11,22,70],[52,13,22,11],[52,14,22,4],[53,0,23,3],[56,33,25,13],[57,0,26,4],[57,40,26,34],[57,45,26,39,"__nodeID"],[57,53,26,4],[58,0,27,3],[61,4,6,29,"AnimatedNode"],[61,26],[63,0,30,7],[63,11,30,16,"createAnimatedConcat"],[63,31,30,7],[63,34,30,46],[64,0,30,46],[64,38,30,40,"args"],[64,42,30,46],[65,0,30,40,"args"],[65,6,30,40,"args"],[65,10,30,46],[66,0,30,46],[68,0,31,2],[68,11,31,9],[68,15,31,13,"AnimatedConcat"],[68,29,31,9],[68,30,31,28,"args"],[68,34,31,32],[68,35,31,33,"map"],[68,38,31,28],[68,39,31,37,"adapt"],[68,59,31,28],[68,60,31,9],[68,61,31,2],[69,0,32,1]],"functionMap":{"names":["<global>","AnimatedConcat","constructor","input.every$argument_0","input.map$argument_0","__onEvaluate","_input.reduce$argument_0","toString","createAnimatedConcat"],"mappings":"AAA;ACK;ECC;QCG;gCDG;6CEI,eF;GDE;EIE;8BCC,sCD;GJC;EME;GNE;CDC;OQE;CRE"}},"type":"js/module"}]}